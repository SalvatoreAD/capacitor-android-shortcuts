{
  "api": {
    "name": "AndroidShortcutsPlugin",
    "slug": "androidshortcutsplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "isPinnedSupported",
        "signature": "() => Promise<{ result: boolean; }>",
        "parameters": [],
        "returns": "Promise<{ result: boolean; }>",
        "tags": [],
        "docs": "Checks if pinned shortcuts are supported on the device",
        "complexTypes": [],
        "slug": "ispinnedsupported"
      },
      {
        "name": "pin",
        "signature": "(options: ShortcutItem) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "An option object for the pinned shortcut",
            "type": "ShortcutItem"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "param",
            "text": "options An option object for the pinned shortcut"
          }
        ],
        "docs": "Add a pinned shortcut",
        "complexTypes": [
          "ShortcutItem"
        ],
        "slug": "pin"
      },
      {
        "name": "getShortCuts",
        "signature": "() => Promise<any>",
        "parameters": [],
        "returns": "Promise<any>",
        "tags": [
          {
            "name": "returns"
          }
        ],
        "docs": "Funzione per ottenere l'elenco degli shortcut installati",
        "complexTypes": [],
        "slug": "getshortcuts"
      },
      {
        "name": "removeShortCut",
        "signature": "({ shortcutId }: { shortcutId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "__0",
            "docs": "",
            "type": "{ shortcutId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "param",
            "text": "param0"
          },
          {
            "name": "param",
            "text": "param0.shortcutId"
          },
          {
            "name": "returns"
          }
        ],
        "docs": "Funzione di rimozione di uno shortcut",
        "complexTypes": [],
        "slug": "removeshortcut"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'shortcut', listenerFunc: (response: { data: string; }) => void) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'shortcut'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(response: { data: string; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [
          {
            "name": "param",
            "text": "eventName"
          },
          {
            "name": "param",
            "text": "listenerFunc"
          }
        ],
        "docs": "Add a listener to a shortcut tap event",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenershortcut-"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "Removes all listeners.",
        "complexTypes": [],
        "slug": "removealllisteners"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "ShortcutItem",
      "slug": "shortcutitem",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "tags": [],
          "docs": "ID of the shortcut",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "shortLabel",
          "tags": [],
          "docs": "Sets the short title of a shortcut.\nThis is a mandatory field when publishing a new shortcut with ShortcutManager.addDynamicShortcuts(List) or ShortcutManager.setDynamicShortcuts(List).\nThis field is intended to be a concise description of a shortcut.\nThe recommended maximum length is 10 characters.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "longLabel",
          "tags": [],
          "docs": "Sets the text of a shortcut.\nThis field is intended to be more descriptive than the shortcut title. The launcher shows this instead of the short title when it has enough space.\nThe recommend maximum length is 25 characters.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "urlIcon",
          "tags": [],
          "docs": "Defines the icon of the shortcut.\nYou can set the icon as a BASE64-Bitmap or as a Resource name",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "data",
          "tags": [],
          "docs": "Data that is passed to the 'shortcut' event",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}